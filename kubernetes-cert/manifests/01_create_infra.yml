---
# This will create the NS for our demo
apiVersion: v1
kind: Namespace
metadata:
  name: conjur-cert
---
# This ServiceAccount provides the Kubernetes RBAC identity for the Conjur Kubernetes authenticator
apiVersion: v1
kind: ServiceAccount
metadata:
  name: conjur-demo-acct
  namespace: conjur-cert
---
# This Role defines the Kubernetes API access permissions that the Conjur
# authenticator will require in order to validate application identities.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: conjur-role
  namespace: conjur-cert
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods", "serviceaccounts"]
    verbs: ["get", "list"]
  - apiGroups: ["extensions"]
    resources: ["deployments", "replicasets"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets", "replicasets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create", "get"]
---
# The Authenticator RoleBinding grants permissions to the Conjur Authenticator ServiceAccount
# for the authenticator Role, which provides a list of Kubernetes API access permissions.
# This is required to validate application identities.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: conjur-role-binding
  namespace: conjur-cert
subjects:
- kind: ServiceAccount
  name: conjur-demo-acct
  namespace: conjur-cert
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: conjur-role
---
# This will config map will hold connection details that our container will use to authenticate to Conjur
apiVersion: v1
kind: ConfigMap
metadata:
  name: conjur-connect
  namespace: conjur-cert
data:
  CONJUR_ACCOUNT: demo
  CONJUR_APPLIANCE_URL: "https://ec2-3-10-224-97.eu-west-2.compute.amazonaws.com:8443"
  CONJUR_AUTHN_URL: "https://ec2-3-10-224-97.eu-west-2.compute.amazonaws.com:8443/authn-k8s/k8s-cluster1"
  CONJUR_AUTHENTICATOR_ID: "k8s-cluster1"
  CONJUR_SSL_CERTIFICATE: |- 
    -----BEGIN CERTIFICATE-----
    MIID6jCCAtKgAwIBAgIVAIqjEFcsLdyLMVVVjLLsgYdhK+CFMA0GCSqGSIb3DQEB
    CwUAMFgxDTALBgNVBAoMBGRlbW8xEjAQBgNVBAsMCUNvbmp1ciBDQTEzMDEGA1UE
    AwwqaXAtMTcyLTE2LTAtMTI4LmV1LXdlc3QtMi5jb21wdXRlLmludGVybmFsMB4X
    DTIyMTExNjA5MDQ0NFoXDTMyMTExMzA5MDQ0NFowNTEzMDEGA1UEAwwqaXAtMTcy
    LTE2LTAtMTI4LmV1LXdlc3QtMi5jb21wdXRlLmludGVybmFsMIIBIjANBgkqhkiG
    9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuXmPu5nkq0o6f/VeqJNlVHfstdAdT3vKKtSf
    Oc3BcNCfxLfUTMz/OfkBp5D+VfkFzqNvgxuJkdZkmkRYvNo5wifzUyjTyn8aFTht
    67BxDw/ElXzkvfiZoTvOiBjQJg42Pbc7aoFOWq7vaC9ttBynkaqlvkkA4qfa7Beb
    1pY002aZyBKhuHTWIMT1QgBZ9S+cpQEmWDM34h8isjAe7H8hpXet/JmcnfiidQxQ
    67oXRs86O/+hgHo9ktj3scAM6ryE6PqxmBd6l80040+nU3bd0sfxP6d4ynXQWor3
    JaGWWnQgB6mphuo61acVt0ebJR/oGgvqI5NimqYQ0IhjhzgSkwIDAQABo4HNMIHK
    MA4GA1UdDwEB/wQEAwIFoDAdBgNVHQ4EFgQU2jmj7l5rSw0yVb/vlWAYkK/YBwkw
    gZgGA1UdEQSBkDCBjYIqaXAtMTcyLTE2LTAtMTI4LmV1LXdlc3QtMi5jb21wdXRl
    LmludGVybmFsgg9pcC0xNzItMTYtMC0xMjiCCGNvbmp1cjAygghjb25qdXIwM4Iv
    ZWMyLTMtMTAtMjI0LTk3LmV1LXdlc3QtMi5jb21wdXRlLmFtYXpvbmF3cy5jb22C
    CWxvY2FsaG9zdDANBgkqhkiG9w0BAQsFAAOCAQEAQM1urSXXQrDLePXnB+yTzNMf
    2+ckLR9qy7Jxw7hpi4dg9zWu8gpBqp/I2X8DqXyCKJ40kIgFcpwQem/3+YK2G0XV
    4MMxCC9LUZtqkj8NOn5edoscRzDUCDDgPeQCfRXFEaF/At0gYBBZsq+K3rRJkVGd
    8EcV4f2VVShLIb1n1b+7TM7+GkzMAa4RjVV9DT5T1YVYWTEh9qKMgHzgROG4fDPi
    VfnLh85Xn60neWjbT6Tl3GYVOBFY9eSDzgY8StzGzIkyRrCbZiliccCERJ0IG+6D
    cNPeH70crHfq6gxRn3p/BTDfCgI1dP4ud2IBE18HVC7JJy+E6/HYiogGhOEV2w==
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    MIIELTCCAxWgAwIBAgIJAJXGk45nPQ2ZMA0GCSqGSIb3DQEBCwUAMFgxDTALBgNV
    BAoMBGRlbW8xEjAQBgNVBAsMCUNvbmp1ciBDQTEzMDEGA1UEAwwqaXAtMTcyLTE2
    LTAtMTI4LmV1LXdlc3QtMi5jb21wdXRlLmludGVybmFsMB4XDTIyMTExNjA5MDQz
    OFoXDTMyMTExMzA5MDQzOFowWDENMAsGA1UECgwEZGVtbzESMBAGA1UECwwJQ29u
    anVyIENBMTMwMQYDVQQDDCppcC0xNzItMTYtMC0xMjguZXUtd2VzdC0yLmNvbXB1
    dGUuaW50ZXJuYWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC82NGV
    FGyxAiHtxqhImAyJQS5sRMc3GttXe4Bg4DevKRD0+Ez04EM6WSSoK332Gchngk84
    LmfdaAb6g6c09DWs6TiLSXprgLHbMI9rzm5kM1OqEJ7pe5AXSAYYHWj/hmqf86WL
    yVdjsnzna/fVKRC/KYawoTN6YcsPIPOY5JWl5Q1q4cRuO2WWIwaqVIcAuPMhI5SL
    1wvjpOvVw0I6ox/MnxsebzCvkPJgwwwv6CkPp25JuCI4Bnx/WjkIdV9mbhtBWRX3
    hJH2AN1uYIJ35gDc928gofRu3fwL0PbMX3EEvbolwvsvvNebTa7iC8Kyt25Fqm/f
    0dyMouQZsVJ/FUpRAgMBAAGjgfkwgfYwgZgGA1UdEQSBkDCBjYIqaXAtMTcyLTE2
    LTAtMTI4LmV1LXdlc3QtMi5jb21wdXRlLmludGVybmFsgg9pcC0xNzItMTYtMC0x
    MjiCCGNvbmp1cjAygghjb25qdXIwM4IvZWMyLTMtMTAtMjI0LTk3LmV1LXdlc3Qt
    Mi5jb21wdXRlLmFtYXpvbmF3cy5jb22CCWxvY2FsaG9zdDAdBgNVHQ4EFgQU8fn/
    1oaXmStUP7q3k5dK4GDSReowHwYDVR0jBBgwFoAU8fn/1oaXmStUP7q3k5dK4GDS
    ReowDAYDVR0TBAUwAwEB/zALBgNVHQ8EBAMCAeYwDQYJKoZIhvcNAQELBQADggEB
    ABfXZSl8N9hWBedH/W9dfVTHThiFyZmTHgXEMhhkrUDOvpdn/Tyudvpx2EBDWZdH
    SkTXehDBpBkZGRhxHxhBGUuESUyjvnHpPneCknMLTR56Xfc4C3YNIq1mR5VCsnLN
    2jq9hADGF5esq7eR5hh0KfIzdnS5tgiURKJUSUtNoJIxrNSuMYKJHEs3viUFhoC7
    t3mOqmcq5NpkCDtPXaPfNBdetkM4WgT0k2nSVXyQ4t2kcD95RzZji4eGcERx9gN4
    0wwX5RBfYwC+HLk2oht7vMXIUnkAasWk0wWjsta+s5x5y3KACJE2FjfDwKCvRhSl
    UJvtMmrcT1rDvl9Z88V8SjQ=
    -----END CERTIFICATE-----

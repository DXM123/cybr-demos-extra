---
# Load policy into circleci branch
# This policy defines the demo branch circleci

# apps is a layer that will aggregate safe permissions for circleci project1
- !layer
  id: apps
  owner: !group managers

# projects/jwt is a layer that will aggregate permissions for all circleci projects that want to use JWT authn to consume Conjur secrets
- !layer
  id: apps/jwt
  owner: !group managers

# create secrets
- !policy
  id: apps/safe
  owner: !group managers
  body:
  - &circleci-secrets
    - !variable
      id: secret1
      owner: !group ../../managers
    - !variable
      id: secret2
      owner: !group ../../managers
    - !variable
      id: secret3
      owner: !group ../../managers

 # Allow apps layer to consume the secrets we have created
  - !permit
    role: !layer ../../apps
    privileges: [ read, execute ]
    resource: *circleci-secrets

# Create the Project identities that we will use to authenticate to Conjur 
# before loading this, change the variables below or export and load with envsubst
# envsubst < policies/02-define-circleci-branch.yml > 02-define-circleci-branch.yml 
# How to get User ID: GET https://circleci.com/api/v2/me
- !host
  id: apps/org/$CIRCLECI_ORG_ID/project/$CIRCLECI_PROJECT_ID/user/$CIRCLECI_USER_ID
  owner: !group managers
  annotations:
    # CircleCI Limitation : Only one context is supported.
    authn-jwt/circleci1/['oidc.circleci.com/context-ids'][0]: $CIRCLECI_CONTEXT_ID
    # CircleCI Project ID.
    authn-jwt/circleci1/['oidc.circleci.com/project-id']: $CIRCLECI_PROJECT_ID

# Add the hosts we have created to their respective layer
- !grant
  roles:
    - !layer apps
  members:
    - !host apps/org/$CIRCLECI_ORG_ID/project/$CIRCLECI_PROJECT_ID/user/$CIRCLECI_USER_ID
- !grant
  roles:
    - !layer apps/jwt
  members:
    - !host apps/org/$CIRCLECI_ORG_ID/project/$CIRCLECI_PROJECT_ID/user/$CIRCLECI_USER_ID
